{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Karan\\\\weatherApp\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\n\nvar WeatherScreen = function (_Component) {\n  _inherits(WeatherScreen, _Component);\n\n  var _super = _createSuper(WeatherScreen);\n\n  function WeatherScreen() {\n    var _this;\n\n    _classCallCheck(this, WeatherScreen);\n\n    _this = _super.call(this);\n\n    _this.getWeather = function _callee() {\n      var url;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = 'https://fcc-weather-api.glitch.me/api/current?lat=35&lon=139';\n              return _context.abrupt(\"return\", fetch(url).then(function (response) {\n                return response.json();\n              }).then(function (responseJson) {\n                _this.setState({\n                  weather: responseJson\n                });\n              }).catch(function (error) {\n                console.error(error);\n              }));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.componentDidMount = function () {\n      _this.getWeather();\n    };\n\n    _this.state = {\n      weather: ''\n    };\n    return _this;\n  }\n\n  _createClass(WeatherScreen, [{\n    key: \"render\",\n    value: function render() {\n      if (this.state.weather === '') {\n        return React.createElement(View, {\n          style: styles.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 11\n          }\n        }, \"Loading...\"));\n      } else {\n        return React.createElement(View, {\n          style: styles.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 9\n          }\n        }, React.createElement(View, {\n          style: styles.subContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          style: styles.title,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }\n        }, \"Weather Forecast\"), React.createElement(Image, {\n          style: styles.cloudImage,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }\n        }), React.createElement(View, {\n          style: styles.textContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 18\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }\n        }, this.state.weather.main.temp, \"\\xB0C\"), React.createElement(Text, {\n          style: {\n            fontSize: 20,\n            margin: 10\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }\n        }, \"humidity : \", this.state.weather.main.humidity), React.createElement(Text, {\n          style: {\n            fontSize: 20\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }\n        }, this.state.weather.weather[0].description))));\n      }\n    }\n  }]);\n\n  return WeatherScreen;\n}(Component);\n\nexport { WeatherScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  subContainer: {\n    flex: 1,\n    borderWidth: 1,\n    alignItems: 'center'\n  },\n  title: {\n    marginTop: 50,\n    fontSize: 30,\n    fontWeight: '550'\n  },\n  cloudImage: {\n    width: 200,\n    height: 200,\n    marginTop: 30\n  },\n  textContainer: {\n    flex: 1,\n    alignItems: 'center',\n    flexDirection: 'row',\n    marginTop: -150\n  }\n});","map":{"version":3,"sources":["C:/Users/Karan/weatherApp/App.js"],"names":["React","Component","WeatherScreen","getWeather","url","fetch","then","response","json","responseJson","setState","weather","catch","error","console","componentDidMount","state","styles","container","subContainer","title","cloudImage","textContainer","fontSize","main","temp","margin","humidity","description","StyleSheet","create","flex","borderWidth","alignItems","marginTop","fontWeight","width","height","flexDirection"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;IAGqBC,a;;;;;AACnB,2BAAc;AAAA;;AAAA;;AACZ;;AADY,UAOdC,UAPc,GAOD;AAAA;AAAA;AAAA;AAAA;AAAA;AAEPC,cAAAA,GAFO,GAED,8DAFC;AAAA,+CAGJC,KAAK,CAACD,GAAD,CAAL,CACJE,IADI,CACC,UAAAC,QAAQ;AAAA,uBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,eADT,EAEJF,IAFI,CAEC,UAAAG,YAAY,EAAI;AACpB,sBAAKC,QAAL,CAAc;AACZC,kBAAAA,OAAO,EAAEF;AADG,iBAAd;AAGD,eANI,EAOJG,KAPI,CAOE,UAAAC,KAAK,EAAI;AACdC,gBAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,eATI,CAHI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAPC;;AAAA,UAsBdE,iBAtBc,GAsBM,YAAM;AACxB,YAAKZ,UAAL;AACD,KAxBa;;AAEZ,UAAKa,KAAL,GAAa;AACXL,MAAAA,OAAO,EAAE;AADE,KAAb;AAFY;AAKb;;;;WAqBD,kBAAS;AACP,UAAI,KAAKK,KAAL,CAAWL,OAAX,KAAuB,EAA3B,EAA+B;AAC7B,eACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEM,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF;AAKD,OAND,MAMO;AACL,eACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAED,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAED,MAAM,CAACE,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEF,MAAM,CAACG,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAIE,oBAAC,KAAD;AACE,UAAA,KAAK,EAAEH,MAAM,CAACI,UADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,EAQE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEJ,MAAM,CAACK,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEC,YAAAA,QAAQ,EAAE;AAAZ,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAKP,KAAL,CAAWL,OAAX,CAAmBa,IAAnB,CAAwBC,IAD3B,UADA,EAIA,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEF,YAAAA,QAAQ,EAAE,EAAZ;AAAgBG,YAAAA,MAAM,EAAC;AAAvB,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACc,KAAKV,KAAL,CAAWL,OAAX,CAAmBa,IAAnB,CAAwBG,QADtC,CAJA,EAOA,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAACJ,YAAAA,QAAQ,EAAE;AAAX,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAKP,KAAL,CAAWL,OAAX,CAAmBA,OAAnB,CAA2B,CAA3B,EAA8BiB,WADjC,CAPA,CARF,CADF,CADF;AAwBD;AACF;;;;EA5DwC3B,S;;SAAtBC,a;AA+DrB,IAAMe,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;AAC/BZ,EAAAA,SAAS,EAAE;AACVa,IAAAA,IAAI,EAAC;AADK,GADoB;AAI/BZ,EAAAA,YAAY,EAAG;AACbY,IAAAA,IAAI,EAAE,CADO;AAEbC,IAAAA,WAAW,EAAE,CAFA;AAGbC,IAAAA,UAAU,EAAE;AAHC,GAJgB;AAS7Bb,EAAAA,KAAK,EAAC;AACJc,IAAAA,SAAS,EAAE,EADP;AAEJX,IAAAA,QAAQ,EAAE,EAFN;AAGJY,IAAAA,UAAU,EAAE;AAHR,GATuB;AAc7Bd,EAAAA,UAAU,EAAE;AACVe,IAAAA,KAAK,EAAE,GADG;AAEVC,IAAAA,MAAM,EAAE,GAFE;AAGVH,IAAAA,SAAS,EAAE;AAHD,GAdiB;AAmB7BZ,EAAAA,aAAa,EAAG;AACdS,IAAAA,IAAI,EAAE,CADQ;AAEdE,IAAAA,UAAU,EAAE,QAFE;AAGdK,IAAAA,aAAa,EAAC,KAHA;AAIdJ,IAAAA,SAAS,EAAC,CAAC;AAJG;AAnBa,CAAlB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Text, View, StyleSheet, Image } from 'react-native';\n\nexport default class WeatherScreen extends Component {\n  constructor() {\n    super();\n    this.state = {\n      weather: '',\n    };\n  }\n\n  getWeather = async () => {\n    //change latitude and longitude\n    var url = 'https://fcc-weather-api.glitch.me/api/current?lat=35&lon=139';\n    return fetch(url)\n      .then(response => response.json())\n      .then(responseJson => {\n        this.setState({\n          weather: responseJson,\n        });\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  componentDidMount = () => {\n    this.getWeather();\n  };\n\n  render() {\n    if (this.state.weather === '') {\n      return (\n        <View style={styles.container}>\n          <Text>Loading...</Text>\n        </View>\n      );\n    } else {\n      return (\n        <View style={styles.container}>\n          <View style={styles.subContainer}>\n            <Text style={styles.title}>\n              Weather Forecast\n            </Text>\n            <Image\n              style={styles.cloudImage}\n            //  source={require('./clouds.png')}\n           />\n            <View style={styles.textContainer}>\n            <Text style={{ fontSize: 18}}>\n              {this.state.weather.main.temp}&deg;C\n            </Text>\n            <Text style={{ fontSize: 20, margin:10}}>\n              humidity : {this.state.weather.main.humidity}\n            </Text>\n            <Text style={{fontSize: 20}}>\n              {this.state.weather.weather[0].description}\n            </Text>\n          </View>\n          </View>    \n        </View>\n      );\n    }\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n   flex:1\n  },\n  subContainer : { \n    flex: 1, \n    borderWidth: 1, \n    alignItems: 'center' \n    },\n    title:{ \n      marginTop: 50, \n      fontSize: 30,\n      fontWeight: '550' \n    },\n    cloudImage :{ \n      width: 200, \n      height: 200, \n      marginTop: 30 \n    },\n    textContainer : { \n      flex: 1,\n      alignItems: 'center', \n      flexDirection:'row', \n      marginTop:-150\n    }\n});\n\n"]},"metadata":{},"sourceType":"module"}